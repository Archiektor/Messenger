{"version":3,"sources":["components/dialogs/dialogs.module.css","components/hoc/withRedirect.tsx","components/dialogs/dialogitem/dialogitem.tsx","components/dialogs/message/message.tsx","components/dialogs/dialogs.tsx","components/dialogs/dialogsContainer.tsx"],"names":["module","exports","Component","DialogItem","props","name","id","className","css","dialogs","ava","link","to","Message","text","msgWrapper","round","message","maxLength50","maxLengthCreator","AddMessageReduxForm","reduxForm","form","onSubmit","handleSubmit","addMsg","Field","placeholder","component","CustomTextArea","validate","required","Dialogs","dialogsPage","addMessage","dialogsElements","isAuth","map","dialog","key","messageElements","messages","dialogsItems","formData","newMessageBody","DialogsContainer","connect","state","auth","dispatch","addNewMessageAC"],"mappings":"2FACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,IAAM,qBAAqB,WAAa,4BAA4B,MAAQ,uBAAuB,KAAO,sBAAsB,aAAe,8BAA8B,OAAS,wBAAwB,OAAS,wBAAwB,SAAW,0BAA0B,QAAU,yBAAyB,OAAS,0B,4CCMtUC,E,mDCehCC,EAV8B,SAACC,GAAW,IAC9CC,EAAYD,EAAZC,KAAMC,EAAMF,EAANE,GACb,OACI,yBAAKC,UAAWC,IAAIC,SAChB,yBAAKF,UAAWC,IAAIE,MACpB,kBAAC,IAAD,CAASH,UAAWC,IAAIG,KAAMC,GAAE,mBAAcN,IAAOD,KCClDQ,EAVwB,SAACT,GAAW,IACxCU,EAAQV,EAARU,KACP,OACI,yBAAKP,UAAWC,IAAIO,YAChB,yBAAKR,UAAWC,IAAIQ,QACpB,yBAAKT,UAAWC,IAAIS,SAAUH,K,iCCqCpCI,EAAcC,YAAiB,IAY/BC,EAAsBC,YAA4C,CACpEC,KAAM,wBADkBD,EAV+E,SAACjB,GACxG,OACI,0BAAMmB,SAAUnB,EAAMoB,aAAcjB,UAAWC,IAAIiB,QAC/C,kBAACC,EAAA,EAAD,CAAOrB,KAAM,iBAAkBsB,YAAW,qBAAwBC,UAAWC,IACtEC,SAAU,CAACC,IAAUb,KAC5B,mDASGc,EAnDsB,SAAC,GAAuC,IAAtCC,EAAqC,EAArCA,YAAaC,EAAwB,EAAxBA,WAC5CC,GADoE,EAAZC,OACtCH,EAAYxB,QAAQ4B,KAAI,SAACC,GAAY,IAChDC,EAAiBD,EAAjBC,IAAKlC,EAAYiC,EAAZjC,KAAMC,EAAMgC,EAANhC,GAClB,OAAQ,kBAAC,EAAD,CAAYD,KAAMA,EAAMC,GAAIA,EAAIiC,IAAKA,QAE7CC,EAAkBP,EAAYQ,SAASJ,KAAI,SAACpB,GAAa,IAClDH,EAAiBG,EAAjBH,KAAUyB,EAAOtB,EAAXX,GACb,OACI,kBAAC,EAAD,CAASQ,KAAMA,EAAMyB,IAAKA,OAQlC,OACI,yBAAKhC,UAAWC,IAAIC,SAChB,yBAAKF,UAAWC,IAAIkC,cACfP,GAEL,yBAAK5B,UAAWC,IAAIiC,UACfD,EACD,kBAACpB,EAAD,CAAqBG,SAXT,SAACoB,GACrBT,EAAWS,EAASC,sB,gBCNtBC,EAAmBC,aAfH,SAACC,GACnB,MAAO,CACHd,YAAac,EAAMd,YACnBG,OAAQW,EAAMC,KAAKZ,WAIF,SAACa,GACtB,MAAO,CACHf,WAAY,SAACpB,GACTmC,EAASC,YAAgBpC,QAKZgC,EJfsB5C,EIeoC8B,EJdxE,SAAC5B,GACJ,OAAKA,EAAMgC,OACJ,kBAAClC,EAAcE,GADI,kBAAC,IAAD,CAAUQ,GAAI,cIejCiC","file":"static/js/4.42f6b6fd.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"dialogs_dialogs__2lcqt\",\"ava\":\"dialogs_ava__2YKfL\",\"msgWrapper\":\"dialogs_msgWrapper__2pL93\",\"round\":\"dialogs_round__Y1hRg\",\"link\":\"dialogs_link__HXvij\",\"dialogsItems\":\"dialogs_dialogsItems__1JOn0\",\"active\":\"dialogs_active__1k01H\",\"dialog\":\"dialogs_dialog__3w-XB\",\"messages\":\"dialogs_messages__EOpcW\",\"message\":\"dialogs_message__2uh7m\",\"addMsg\":\"dialogs_addMsg__NYQw1\"};","import React from \"react\";\r\nimport {Redirect} from \"react-router-dom\";\r\n\r\ntype WithSomeProps = {\r\n    isAuth: boolean,\r\n}\r\n\r\nexport const withRedirect = <P extends object>(Component: React.ComponentType<P>) => {\r\n    return (props: P & WithSomeProps) => {\r\n        if (!props.isAuth) return <Redirect to={\"/login\"}/>\r\n        return <Component {...props}/>\r\n    }\r\n}","import React from \"react\";\r\n\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nimport css from \"../dialogs.module.css\";\r\n\r\ntype DialogItemType = {\r\n    key: string,\r\n    name: string,\r\n    id: number,\r\n}\r\n\r\nconst DialogItem: React.FC<DialogItemType> = (props) => {\r\n    const {name, id} = props;\r\n    return (\r\n        <div className={css.dialogs}>\r\n            <div className={css.ava}></div>\r\n            <NavLink className={css.link} to={`/dialogs/${id}`}>{name}</NavLink>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DialogItem;","import React from \"react\";\r\n\r\nimport css from \"../dialogs.module.css\";\r\n\r\ntype MessageType = {\r\n    text: string,\r\n}\r\n\r\nconst Message: React.FC<MessageType> = (props) => {\r\n    const {text} = props;\r\n    return (\r\n        <div className={css.msgWrapper}>\r\n            <div className={css.round}></div>\r\n            <div className={css.message}>{text}</div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Message;","import React from 'react';\r\n\r\nimport css from './dialogs.module.css';\r\nimport DialogItem from './dialogitem/dialogitem';\r\nimport Message from './message/message';\r\nimport {DialogsPage} from '../../redux/dialogs-reducer';\r\nimport {Field, InjectedFormProps, reduxForm} from 'redux-form';\r\nimport {CustomTextArea} from '../common/FormsControl/FormsControl';\r\nimport {maxLengthCreator, required} from '../utils/validators/validators';\r\n\r\ntype PropsType = {\r\n    dialogsPage: DialogsPage,\r\n    addMessage: (text: string) => void,\r\n    isAuth: boolean,\r\n}\r\nconst Dialogs: React.FC<PropsType> = ({dialogsPage, addMessage, isAuth}) => {\r\n    let dialogsElements = dialogsPage.dialogs.map((dialog) => {\r\n        const {key, name, id} = dialog;\r\n        return (<DialogItem name={name} id={id} key={key}/>)\r\n    })\r\n    let messageElements = dialogsPage.messages.map((message) => {\r\n        const {text, id: key} = message;\r\n        return (\r\n            <Message text={text} key={key}/>\r\n        )\r\n    })\r\n\r\n    const onSubmitHandler = (formData: FormDataType) => {\r\n        addMessage(formData.newMessageBody);\r\n    }\r\n\r\n    return (\r\n        <div className={css.dialogs}>\r\n            <div className={css.dialogsItems}>\r\n                {dialogsElements}\r\n            </div>\r\n            <div className={css.messages}>\r\n                {messageElements}\r\n                <AddMessageReduxForm onSubmit={onSubmitHandler}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\ntype FormDataType = {\r\n    newMessageBody: string,\r\n}\r\ntype AddMessageFormType = {\r\n    onSubmit: (formData: FormDataType) => void,\r\n}\r\nconst maxLength50 = maxLengthCreator(50);\r\n\r\nconst AddMessageForm: React.FC<InjectedFormProps<FormDataType, AddMessageFormType> & AddMessageFormType> = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit} className={css.addMsg}>\r\n            <Field name={\"newMessageBody\"} placeholder={`Enter your message`} component={CustomTextArea}\r\n                   validate={[required, maxLength50]}/>\r\n            <button>Add Message</button>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst AddMessageReduxForm = reduxForm<FormDataType, AddMessageFormType>({\r\n    form: 'dialogAddMessageForm'\r\n})(AddMessageForm)\r\n\r\nexport default Dialogs;\r\n\r\n","import {addNewMessageAC} from \"../../redux/dialogs-reducer\";\r\nimport Dialogs from \"./dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport {AppStateType} from \"../../redux/redux-store\";\r\nimport {Dispatch} from \"redux\";\r\nimport {withRedirect} from \"../hoc/withRedirect\"\r\n\r\nlet mapStateToProps = (state: AppStateType) => {\r\n    return {\r\n        dialogsPage: state.dialogsPage,\r\n        isAuth: state.auth.isAuth,\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch: Dispatch) => {\r\n    return {\r\n        addMessage: (text: string) => {\r\n            dispatch(addNewMessageAC(text))\r\n        },\r\n    }\r\n}\r\n\r\nconst DialogsContainer = connect(mapStateToProps, mapDispatchToProps)(withRedirect(Dialogs))\r\n\r\nexport default DialogsContainer;"],"sourceRoot":""}